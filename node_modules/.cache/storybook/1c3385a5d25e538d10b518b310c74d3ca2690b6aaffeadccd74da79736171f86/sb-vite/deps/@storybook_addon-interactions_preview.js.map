{
  "version": 3,
  "sources": ["../../../../../@storybook/addon-interactions/dist/preview.js"],
  "sourcesContent": ["import { isMockFunction, fn } from '@storybook/test';\nimport { instrument } from '@storybook/instrumenter';\n\nvar {step:runStep}=instrument({step:(label,play,context)=>play(context)},{intercept:!0}),traverseArgs=(value,depth=0,key)=>{if(depth>5||value==null)return value;if(isMockFunction(value))return key&&value.mockName(key),value;if(typeof value==\"function\"&&\"isAction\"in value&&value.isAction&&!(\"implicit\"in value&&value.implicit)){let mock=fn(value);return key&&mock.mockName(key),mock}if(Array.isArray(value))return depth++,value.map(item=>traverseArgs(item,depth));if(typeof value==\"object\"&&value.constructor===Object){depth++;for(let[k,v]of Object.entries(value))Object.getOwnPropertyDescriptor(value,k).writable&&(value[k]=traverseArgs(v,depth,k));return value}return value},wrapActionsInSpyFns=({initialArgs})=>traverseArgs(initialArgs),argsEnhancers=[wrapActionsInSpyFns],parameters={throwPlayFunctionExceptions:!1};\n\nexport { argsEnhancers, parameters, runStep, traverseArgs };\n"],
  "mappings": ";;;;;;;;;;;;AAGA,IAAI,EAAC,MAAK,QAAO,IAAE,WAAW,EAAC,MAAK,CAAC,OAAM,MAAK,YAAU,KAAK,OAAO,EAAC,GAAE,EAAC,WAAU,KAAE,CAAC;AAAvF,IAAyF,eAAa,CAAC,OAAM,QAAM,GAAE,QAAM;AAAC,MAAG,QAAM,KAAG,SAAO;AAAK,WAAO;AAAM,MAAG,eAAe,KAAK;AAAE,WAAO,OAAK,MAAM,SAAS,GAAG,GAAE;AAAM,MAAG,OAAO,SAAO,cAAY,cAAa,SAAO,MAAM,YAAU,EAAE,cAAa,SAAO,MAAM,WAAU;AAAC,QAAI,OAAK,GAAG,KAAK;AAAE,WAAO,OAAK,KAAK,SAAS,GAAG,GAAE;AAAA,EAAI;AAAC,MAAG,MAAM,QAAQ,KAAK;AAAE,WAAO,SAAQ,MAAM,IAAI,UAAM,aAAa,MAAK,KAAK,CAAC;AAAE,MAAG,OAAO,SAAO,YAAU,MAAM,gBAAc,QAAO;AAAC;AAAQ,aAAO,CAAC,GAAE,CAAC,KAAI,OAAO,QAAQ,KAAK;AAAE,aAAO,yBAAyB,OAAM,CAAC,EAAE,aAAW,MAAM,CAAC,IAAE,aAAa,GAAE,OAAM,CAAC;AAAG,WAAO;AAAA,EAAK;AAAC,SAAO;AAAK;AAAnqB,IAAqqB,sBAAoB,CAAC,EAAC,YAAW,MAAI,aAAa,WAAW;AAAluB,IAAouB,gBAAc,CAAC,mBAAmB;AAAtwB,IAAwwB,aAAW,EAAC,6BAA4B,MAAE;",
  "names": []
}
